5.	Write a simple program which loops over a list of user data (tuples containing a username, email and age) and adds each user to a directory if the user is at least 16 years old. You do not need to store the age. Write a simple exception hierarchy which defines a different exception for each of these error conditions:
•	the username is not unique
•	the age is not a positive integer
•	the user is under 16
•	the email address is not valid (a simple check for a username, the @ symbol and a domain name is sufficient)
Raise these exceptions in your program where appropriate. Whenever an exception occurs, your program should move onto the next set of data in the list. Print a different error message for each different kind of exception.
You can consider an email address to be valid if it contains one @ symbol and has a non-empty username and domain name – you don’t need to check for valid characters. You can assume that the age is already an integer value.

Answer:
#include<iostream>
#include<iomanip>
#include<stdlib.h>
using namespace std;
struct user_data
{
    string username;
    string email;
    int age;
};
int main()
{
    int iteration=0,count=0,total_user,j=0;
    cout<<"Enter total number of user"<<"\n";
    cin>>total_user;
    user_data u[total_user];
    for(iteration=0;iteration<total_user;iteration++)
    {
        cout<<"Enter the user name";
        cin>>u[iteration].username;

     count=count+1;
     for(j=0;j<count-1;j++)
        {
            try
            {
             if(u[iteration].username==u[j].username)
             {
                throw "Exception";
             }
            }
            catch(string e)
            {
             cout<"User name is not unique";
            }
        }
        cout<<"Enter the email"<<"\n";
        cin>>u[iteration].email;
        cout<<"Enter the age"<<"\n";
        cin>>u[iteration].age;
         try
         {
             if(u[iteration].age<0)
             {
                throw u[iteration].age;
             }
         }
         catch(int a)
         {
             cout<<"The age is not a positive integer";
         }
         try
         {
         if(u[iteration].age<16)
         {
            throw u[iteration].age;
         }
         }
         catch(int e)
         {
             cout<<"The user name is under 16";
         }
}
    return 0;
}
